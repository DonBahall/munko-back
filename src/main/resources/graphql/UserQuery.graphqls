type Query {
    authenticate(email: String!, password: String!): UserRequest
    getCurrentUser: UserDto
    getUserOrders: [Order]
    getUserFavorite: [FunkoPop]
    deleteAccount: Boolean
}

type UserRequest{
    user: UserDto
    token: String
}

type UserDto{
    id: Int!
    firstName: String!
    lastName: String
    email: String!
    phone: String
    address: Address
    password: String
    creditCard: [CreditCard]
}

type User{
    id: Int!
    firstName: String!
    lastName: String
    email: String!
    phone: String
    password: String
    address: Address
    role: String
    favorite: [Int]
    creditCard: [CreditCard]
}

type CreditCard{
    id: Int
    creditCard: String
}

type Address{
    id: Int!
    userId: Int!
    countryCode: String
    district: String
    city: String
    street: String
    house: String
    postalCode: String
}

input UserInput{
    id: Int
    firstName:String
    lastName:String
    email:String
    phone:String
    password:String
    address: AddressInput
    orders: [OrderItemInput]
    role: String
    favorite: [Int]
}


input AddressInput{
    id: Int
    userId: Int!
    addressLine1: String
    addressLine2: String
    postalCode: String
    city: String
    countryCode: String
}
